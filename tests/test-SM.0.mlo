— Begin: theory database test-SM.

theory LM.

axiom A1. formula 𝑨, 𝑩.
  𝑨 ⇒ (𝑩 ⇒ 𝑨).

axiom A2. formula 𝑨, 𝑩, 𝑪.
  (𝑨 ⇒ (𝑩 ⇒ 𝑪)) ⇒ ((𝑨 ⇒ 𝑩) ⇒ (𝑨 ⇒ 𝑪)).

axiom A3. formula 𝑨, 𝑩.
  (¬𝑩 ⇒ ¬𝑨) ⇒ ((¬𝑩 ⇒ 𝑨) ⇒ 𝑩).

rule MP. formula 𝑨, 𝑩.
  𝑨, 𝑨 ⇒ 𝑩 ⊢ 𝑩.

postulate DT. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞 ⊢ 𝑨 ⇒ 𝑩.

definition D1. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ≔ ¬(𝑨 ⇒ ¬𝑩).

definition D2. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩 ≔ ¬𝑨 ⇒ 𝑩.

definition D3. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ≔ (𝑨 ⇒ 𝑩) ∧ (𝑩 ⇒ 𝑨).

axiom D4. 
  𝕥.

definition D5. 
  𝕗 ≔ ¬𝕥.

end theory LM.


theory KM.
  include theory LM.

rule K1. formula 𝑨 object 𝑡, °𝒙.
  ∀¹°𝒙 𝑨 ⊢ 𝑨[°𝒙 ⤇ 𝑡].

axiom K2. formula 𝑨, 𝑩 object °𝒙.
  °𝒙 not free in 𝑨 ⊩ (∀¹°𝒙: 𝑨 ⇒ 𝑩) ⇒ (𝑨 ⇒ ∀²°𝒙 𝑩).

rule Gen. formula 𝑨 object °𝒙.
  𝑨 ⊢⁽°𝒙⁾ ∀¹°𝒙 𝑨.

rule Ex. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨 ⊩ 𝑨[°𝒙 ⤇ 𝒕] ⊢ ∃¹°𝒙 𝑨.

postulate K3. formula sequence 𝜞 formula 𝑨, 𝑩 object °𝒙.
  𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞, ∃¹°𝒙 𝑨 ⊢ 𝑩.

end theory KM.


theory SM.
  include theory KM.

axiom S1. object 𝑥, 𝑦, 𝑧.
  𝑥 = 𝑦 ⇒ (𝑥 = 𝑧 ⇒ 𝑦 = 𝑧).

axiom S2. object 𝑥, 𝑦.
  𝑥 = 𝑦 ⇒ s(𝑥) = s(𝑦).

axiom S3. object 𝑥.
  0 ≠ s(𝑥).

axiom S3a. object 𝑥.
  ¬0 = s(𝑥).

axiom S4. object 𝑥, 𝑦.
  s(𝑥) = s(𝑦) ⇒ 𝑥 = 𝑦.

axiom S5. object 𝑥.
  𝑥 + 0 = 𝑥.

axiom S6. object 𝑥, 𝑦.
  𝑥 + s(𝑦) = s(𝑥 + 𝑦).

axiom S7. object 𝑥.
  𝑥 ⋅ 0 = 0.

axiom S8. object 𝑥, 𝑦.
  𝑥 ⋅ s(𝑦) = 𝑥 ⋅ 𝑦 + 𝑥.

rule S1a. object 𝑥, 𝑦, 𝑧.
  𝑥 = 𝑦, 𝑥 = 𝑧 ⊢ 𝑦 = 𝑧.

rule S2a. object 𝑥, 𝑦.
  𝑥 = 𝑦 ⊢ s(𝑥) = s(𝑦).

rule S4a. object 𝑥, 𝑦.
  s(𝑥) = s(𝑦) ⊢ 𝑥 = 𝑦.

axiom S9a. predicate variable 𝑷.
  𝑷(0) ∧ ∀¹°𝑥⁰⁺¹: 𝑷(°𝑥⁰⁺¹) ⇒ 𝑷(s(°𝑥⁰⁺¹)) ⇒ ∀²°𝑥⁰⁺² 𝑷(°𝑥⁰⁺²).

axiom S9b. formula 𝑨 object °𝒙.
  𝑨[°𝒙 ⤇ 0] ∧ ∀¹°𝒙: 𝑨 ⇒ 𝑨[°𝒙 ⤇ s(°𝒙)] ⇒ ∀²°𝒙 𝑨.

postulate S9c. formula 𝑨 object °𝒙.
  𝑨[°𝒙 ⤇ 0], ∀²°𝒙: 𝑨 ⇒ 𝑨[°𝒙 ⤇ s(°𝒙)] ⊢ ∀¹°𝒙 𝑨.

definition NE. object 𝑥, 𝑦.
  𝑥 ≠ 𝑦 ≔ ¬𝑥 = 𝑦.

definition SL. object 𝑥, 𝑦.
  𝑥 < 𝑦 ≔ ∃¹°𝒘⁰⁺¹: ¬°𝒘⁰⁺¹ = 0 ∧ 𝑥 + °𝒘⁰⁺¹ = 𝑦.

definition SLA. object 𝑥, 𝑦.
  𝑥 < 𝑦 ≔ ∃¹°𝑤⁰⁺¹: ¬°𝑤⁰⁺¹ = 0 ∧ 𝑥 + °𝑤⁰⁺¹ = 𝑦.

definition SLE. object 𝑥, 𝑦.
  𝑥 ≤ 𝑦 ≔ 𝑥 < 𝑦 ∨ 𝑥 = 𝑦.

definition SG. object 𝑥, 𝑦.
  𝑥 > 𝑦 ≔ 𝑦 < 𝑥.

definition SGE. object 𝑥, 𝑦.
  𝑥 ≥ 𝑦 ≔ 𝑦 ≤ 𝑥.

definition SNL. object 𝑥, 𝑦.
  𝑥 ≮ 𝑦 ≔ ¬𝑥 < 𝑦.

definition SNLE. object 𝑥, 𝑦.
  𝑥 ≤ 𝑦 ≔ ¬𝑥 ≤ 𝑦.

definition SNG. object 𝑥, 𝑦.
  𝑥 ≯ 𝑦 ≔ ¬𝑥 > 𝑦.

definition SNGE. object 𝑥, 𝑦.
  𝑥 ≱ 𝑦 ≔ ¬𝑥 ≥ 𝑦.

definition n1. 
  1 ≔ s(0).

definition n2. 
  2 ≔ s(1).

definition n3. 
  3 ≔ s(2).

definition n4. 
  4 ≔ s(3).

end theory SM.


theory Eq.

definition EQ. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ≔ (𝑨 ⇒ 𝑩) ∧ (𝑩 ⇒ 𝑨).

axiom Cas. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∧ 𝑩 ∧ 𝑪 ⇔ 𝑨 ∧ (𝑩 ∧ 𝑪).

axiom Ccm. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⇔ 𝑩 ∧ 𝑨.

axiom Cds. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∧ (𝑩 ∨ 𝑪) ⇔ 𝑨 ∧ 𝑩 ∨ 𝑨 ∧ 𝑪.

axiom Cid. formula 𝑨.
  𝑨 ∧ 𝑨 ⇔ 𝑨.

axiom Cel. formula 𝑨, 𝑩.
  𝑨 ∧ (𝑨 ∨ 𝑩) ⇔ 𝑨.

axiom Das. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∨ 𝑩 ∨ 𝑪 ⇔ 𝑨 ∨ (𝑩 ∨ 𝑪).

axiom Dcm. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩 ⇔ 𝑩 ∨ 𝑨.

axiom Dds. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∨ 𝑩 ∧ 𝑪 ⇔ (𝑨 ∨ 𝑩) ∧ (𝑨 ∨ 𝑪).

axiom Did. formula 𝑨.
  𝑨 ∨ 𝑨 ⇔ 𝑨.

axiom Del. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑨 ∧ 𝑩 ⇔ 𝑨.

rule Impre. formula 𝑨, 𝑩.
  𝑨 ⊢ 𝑨 ⇒ 𝑩 ⇔ 𝑩.

rule Imcon. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ⇒ 𝑩 ⇔ 𝑩.

rule ImNpre. formula 𝑨, 𝑩.
  ¬𝑨 ⊢ 𝑨 ⇒ 𝑩 ⇔ ¬𝑨.

rule ImNcon. formula 𝑨, 𝑩.
  ¬𝑩 ⊢ 𝑨 ⇒ 𝑩 ⇔ ¬𝑨.

rule Cpre. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ∧ 𝑩 ⇔ 𝑨.

rule CNpre. formula 𝑨, 𝑩.
  ¬𝑩 ⊢ 𝑨 ∧ 𝑩 ⇔ 𝑩.

rule Dpre. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ∨ 𝑩 ⇔ 𝑨.

rule DNpre. formula 𝑨, 𝑩.
  ¬𝑩 ⊢ 𝑨 ∨ 𝑩 ⇔ 𝑩.

rule DNL. formula 𝑨.
   ⊢ ¬¬𝑨 ⇔ 𝑨.

rule DCL. formula 𝑨.
   ⊢ ¬(𝑨 ∧ ¬𝑨) ⇔ 𝑨.

rule EML. formula 𝑨.
   ⊢ 𝑨 ∨ ¬𝑨.

rule SCD. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ (𝑩 ∨ ¬𝑩) ⇔ 𝑨.

rule SDC. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ∧ ¬𝑩 ⇔ 𝑨.

rule SC. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ 𝑩 ∧ ¬𝑩 ⇔ 𝑩 ∧ ¬𝑩.

rule SD. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ∨ ¬𝑩 ⇔ 𝑩 ∨ ¬𝑩.

rule 56. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ⇔ ¬(¬𝑨 ∧ ¬𝑩).

rule 57. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ 𝑩 ⇔ ¬(¬𝑨 ∨ ¬𝑩).

rule 58. formula 𝑨, 𝑩.
   ⊢ 𝑨 ⇒ 𝑩 ⇔ ¬(𝑨 ∧ ¬𝑩).

rule 59. formula 𝑨, 𝑩.
   ⊢ 𝑨 ⇒ 𝑩 ⇔ ¬𝑨 ∨ 𝑩.

rule 60. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ 𝑩 ⇔ ¬(𝑨 ⇒ ¬𝑩).

rule 61. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ⇔ ¬𝑨 ⇒ 𝑩.

rule 62. formula 𝑨, 𝑩.
   ⊢ ¬(𝑨 ∧ 𝑩) ⇔ ¬𝑨 ∨ ¬𝑩.

rule 63. formula 𝑨, 𝑩.
   ⊢ ¬(𝑨 ∨ 𝑩) ⇔ ¬𝑨 ∧ ¬𝑩.

rule 49a. formula 𝑨.
   ⊢ 𝑨 ⇒ ¬¬𝑨.

rule 49b. formula 𝑨.
   ⊢ ¬¬¬𝑨 ⇔ ¬𝑨.

rule 49c. formula 𝑨.
   ⊢ 𝑨 ∨ ¬𝑨 ⇒ (¬¬𝑨 ⇒ 𝑨).

rule 49d. formula 𝑨.
   ⊢ 𝑨 ∨ ¬𝑨 ⇒ (¬¬𝑨 ⇔ 𝑨).

rule 50a. formula 𝑨.
   ⊢ ¬(𝑨 ⇔ ¬𝑨).

rule 51a. formula 𝑨.
   ⊢ ¬¬(𝑨 ∨ ¬𝑨).

rule 51b. formula 𝑨.
   ⊢ ¬¬(¬¬𝑨 ⇒ 𝑨).

rule 56a. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ⇒ ¬(¬𝑨 ∧ ¬𝑩).

rule 56b. formula 𝑨, 𝑩.
   ⊢ ¬𝑨 ∨ 𝑩 ⇒ ¬(𝑨 ∧ ¬𝑩).

rule 57a. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ 𝑩 ⇒ ¬(¬𝑨 ∨ ¬𝑩).

rule 57b. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ ¬𝑩 ⇒ ¬(¬𝑨 ∨ 𝑩).

rule 58a. formula 𝑨, 𝑩.
   ⊢ (𝑨 ⇒ 𝑩) ⇒ ¬(𝑨 ∧ ¬𝑩).

rule 58b. formula 𝑨, 𝑩.
   ⊢ 𝑨 ⇒ ¬𝑩 ⇔ ¬(𝑨 ∧ 𝑩).

rule 58g. formula 𝑨, 𝑩.
   ⊢ (¬¬𝑨 ⇒ 𝑩) ⇒ ¬(𝑨 ∧ ¬𝑩).

rule 59a. formula 𝑨, 𝑩.
   ⊢ ¬𝑨 ∨ 𝑩 ⇒ (𝑨 ⇒ 𝑩).

rule 59b. formula 𝑨, 𝑩.
   ⊢ (𝑨 ⇒ 𝑩) ⇒ ¬¬(¬𝑨 ∨ 𝑩).

rule 59c. formula 𝑨, 𝑩.
   ⊢ (¬𝑨 ⇒ 𝑩) ⇒ ¬¬(𝑨 ∨ 𝑩).

rule 60a. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ 𝑩 ⇒ ¬(𝑨 ⇒ ¬𝑩).

rule 60b. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∧ ¬𝑩 ⇒ ¬(𝑨 ⇒ 𝑩).

rule 60c. formula 𝑨, 𝑩.
   ⊢ ¬¬𝑨 ∧ 𝑩 ⇒ ¬(𝑨 ⇒ ¬𝑩).

rule 6la. formula 𝑨, 𝑩.
   ⊢ 𝑨 ∨ 𝑩 ⇒ (¬𝑨 ⇒ 𝑩).

rule 61b. formula 𝑨, 𝑩.
   ⊢ ¬(𝑨 ∨ 𝑩) ⇔ ¬(¬𝑨 ⇒ 𝑩).

rule 62a. formula 𝑨, 𝑩.
   ⊢ ¬𝑨 ∨ ¬𝑩 ⇒ ¬(𝑨 ∧ 𝑩).

rule MP. formula 𝑨, 𝑩.
  𝑨, 𝑨 ⇒ 𝑩 ⊢ 𝑩.

rule MT. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩, ¬𝑩 ⊢ ¬𝑨.

postulate DT1. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞 ⊢ 𝑨 ⇒ 𝑩.

rule CI. formula 𝑨, 𝑩.
  𝑨, 𝑩 ⊢ 𝑨 ∧ 𝑩.

rule CE1. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⊢ 𝑨.

rule CE2. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⊢ 𝑩.

rule DI1. formula 𝑨, 𝑩.
  𝑨 ⊢ 𝑨 ∨ 𝑩.

rule DI2. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ∨ 𝑩.

postulate PC. formula sequence 𝜞 formula 𝑨, 𝑩, 𝑪.
  𝜞, 𝑨 ⊢ 𝑪; 𝜞, 𝑩 ⊢ 𝑪 ⊩ 𝜞, 𝑨 ∨ 𝑩 ⊢ 𝑪.

rule CA. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑪, 𝑨 ∨ 𝑩 ⊢ 𝑪.

rule DS1. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩, ¬𝑨 ⊢ 𝑩.

rule DS2. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩, ¬𝑩 ⊢ 𝑨.

rule CD. formula 𝑨, 𝑩, 𝑪, 𝑫.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑫, 𝑨 ∨ 𝑩 ⊢ 𝑪 ∨ 𝑫.

rule DD. formula 𝑨, 𝑩, 𝑪, 𝑫.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑫, ¬𝑪 ∨ ¬𝑫 ⊢ ¬𝑨 ∨ ¬𝑩.

postulate RA. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, 𝑨 ⊢ 𝑩; 𝜞, 𝑨 ⊢ ¬𝑩 ⊩ 𝜞 ⊢ ¬𝑨.

postulate RAN. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, ¬𝑨 ⊢ 𝑩; 𝜞, ¬𝑨 ⊢ ¬𝑩 ⊩ 𝜞 ⊢ 𝑨.

rule DNE. formula 𝑨.
  ¬¬𝑨 ⊢ 𝑨.

rule DNI. formula 𝑨.
  𝑨 ⊢ ¬¬𝑨.

rule NC. formula 𝑨, 𝑩.
  ¬𝑨, 𝑨 ⊢ 𝑩.

rule Gen. formula 𝑨 object °𝒙.
  𝑨 ⊢⁽°𝒙⁾ ∀¹°𝒙 𝑨.

rule Spec. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨, ∀¹°𝒙 𝑨 ⊢ 𝑨[°𝒙 ⤇ 𝒕].

rule Sub. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨, 𝑨 ⊢⁽°𝒙⁾ 𝑨[°𝒙 ⤇ 𝒕].

rule ExI. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨, 𝑨[°𝒙 ⤇ 𝒕] ⊢ ∃¹°𝒙 𝑨.

rule ExIa. formula 𝑨 object 𝒕, °𝒙.
  𝑨[°𝒙 ⤇ 𝒕] ⊢ ∃¹°𝒙 𝑨.

postulate ExE. formula sequence 𝜞 formula 𝑨, 𝑩 object °𝒙.
  °𝒙 not free in 𝑩; 𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞, ∃¹°𝒙 𝑨 ⊢⁽°𝒙⁾ 𝑩.

axiom EqR. formula 𝑨.
  𝑨 ⇔ 𝑨.

rule EqS. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑩 ⇔ 𝑨.

rule EqT. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇔ 𝑩, 𝑩 ⇔ 𝑪 ⊢ 𝑨 ⇔ 𝑪.

rule EqI. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩, 𝑩 ⇒ 𝑨 ⊢ 𝑨 ⇔ 𝑩.

rule EqE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑨 ⇒ 𝑩.

rule EqE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑩 ⇒ 𝑨.

rule EqE3. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑨 ⊢ 𝑩.

rule EqE4. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑩 ⊢ 𝑨.

rule EqNE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑨 ⊢ ¬𝑩.

rule EqNE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑩 ⊢ ¬𝑨.

rule EqDE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑨 ∨ 𝑩 ⊢ 𝑨 ∧ 𝑩.

rule EqDE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑨 ∨ ¬𝑩 ⊢ ¬𝑨 ∧ ¬𝑩.

axiom Id. formula 𝑨.
  𝑨 ⇒ 𝑨.

rule ICh. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩, 𝑩 ⇒ 𝑪 ⊢ 𝑨 ⇒ 𝑪.

rule PI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪) ⊢ 𝑩 ⇒ (𝑨 ⇒ 𝑪).

rule Imp. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪) ⊢ 𝑨 ∧ 𝑩 ⇒ 𝑪.

rule Exp. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∧ 𝑩 ⇒ 𝑪 ⊢ 𝑨 ⇒ (𝑩 ⇒ 𝑪).

rule ICI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ (𝑩 ⇒ 𝑪) ⇒ (𝑨 ⇒ 𝑪).

rule IPI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ (𝑪 ⇒ 𝑨) ⇒ (𝑪 ⇒ 𝑩).

rule CMI1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑨 ∧ 𝑪 ⇒ 𝑩 ∧ 𝑪.

rule CMI2. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑪 ∧ 𝑨 ⇒ 𝑪 ∧ 𝑩.

rule DMI1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑨 ∨ 𝑪 ⇒ 𝑩 ∨ 𝑪.

rule DMI2. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑪 ∨ 𝑨 ⇒ 𝑪 ∨ 𝑩.

rule IRP1. formula 𝑨, 𝑩.
  ¬𝑨 ⊢ 𝑨 ⇒ 𝑩.

rule IRP2. formula 𝑨, 𝑩.
  𝑨 ⊢ ¬𝑨 ⇒ 𝑩.

rule IPC. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ⇒ 𝑩.

rule IC. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩 ⊢ ¬𝑩 ⇒ ¬𝑨.

rule ICN. formula 𝑨, 𝑩.
  𝑨 ⇒ ¬𝑩 ⊢ 𝑩 ⇒ ¬𝑨.

rule ICDN1. formula 𝑨, 𝑩.
  ¬𝑨 ⇒ 𝑩 ⊢ ¬𝑩 ⇒ 𝑨.

rule ICDN2. formula 𝑨, 𝑩.
  ¬𝑨 ⇒ ¬𝑩 ⊢ 𝑩 ⇒ 𝑨.

rule IL1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪), ¬¬𝑨, ¬¬𝑩 ⊢ ¬¬𝑪.

rule IL2. formula 𝑨, 𝑩.
  ¬¬(𝑨 ⇒ 𝑩) ⊢ ¬¬𝑨 ⇒ ¬¬𝑩.

rule IL3. formula 𝑨, 𝑩, 𝑪.
  ¬¬(𝑨 ⇒ 𝑩), ¬¬(𝑩 ⇒ 𝑪) ⊢ ¬¬(𝑨 ⇒ 𝑪).

axiom IL4. formula 𝑨, 𝑩.
  ¬¬(𝑨 ∧ 𝑩) ⇔ ¬¬𝑨 ∧ ¬¬𝑩.

axiom IL5. formula 𝑨, 𝑩.
  ¬¬(𝑨 ⇔ 𝑩) ⇔ ¬¬(𝑨 ⇒ 𝑩) ∧ ¬¬(𝑩 ⇒ 𝑨).

end theory Eq.


theory IR.

rule MP. formula 𝑨, 𝑩.
  𝑨, 𝑨 ⇒ 𝑩 ⊢ 𝑩.

rule MT. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩, ¬𝑩 ⊢ ¬𝑨.

postulate DT1. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞 ⊢ 𝑨 ⇒ 𝑩.

rule CI. formula 𝑨, 𝑩.
  𝑨, 𝑩 ⊢ 𝑨 ∧ 𝑩.

rule CE1. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⊢ 𝑨.

rule CE2. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⊢ 𝑩.

rule CE. formula 𝑨, 𝑩.
  𝑨 ∧ 𝑩 ⊢ 𝑨, 𝑩.

rule DI1. formula 𝑨, 𝑩.
  𝑨 ⊢ 𝑨 ∨ 𝑩.

rule DI2. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ∨ 𝑩.

postulate DI. formula 𝑨, 𝑩.
  𝑨 ⊢ 𝑨 ∨ 𝑩; 𝑩 ⊢ 𝑨 ∨ 𝑩.

postulate PC. formula sequence 𝜞 formula 𝑨, 𝑩, 𝑪.
  𝜞, 𝑨 ⊢ 𝑪; 𝜞, 𝑩 ⊢ 𝑪 ⊩ 𝜞, 𝑨 ∨ 𝑩 ⊢ 𝑪.

postulate PCa. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⊢ 𝑪; 𝑩 ⊢ 𝑪 ⊩ 𝑨 ∨ 𝑩 ⊢ 𝑪.

rule CA. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑪, 𝑨 ∨ 𝑩 ⊢ 𝑪.

rule DS1. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩, ¬𝑨 ⊢ 𝑩.

rule DS2. formula 𝑨, 𝑩.
  𝑨 ∨ 𝑩, ¬𝑩 ⊢ 𝑨.

rule CD. formula 𝑨, 𝑩, 𝑪, 𝑫.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑫, 𝑨 ∨ 𝑩 ⊢ 𝑪 ∨ 𝑫.

rule DD. formula 𝑨, 𝑩, 𝑪, 𝑫.
  𝑨 ⇒ 𝑪, 𝑩 ⇒ 𝑫, ¬𝑪 ∨ ¬𝑫 ⊢ ¬𝑨 ∨ ¬𝑩.

postulate RA. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, 𝑨 ⊢ 𝑩; 𝜞, 𝑨 ⊢ ¬𝑩 ⊩ 𝜞 ⊢ ¬𝑨.

postulate RAN. formula sequence 𝜞 formula 𝑨, 𝑩.
  𝜞, ¬𝑨 ⊢ 𝑩; 𝜞, ¬𝑨 ⊢ ¬𝑩 ⊩ 𝜞 ⊢ 𝑨.

rule DNE. formula 𝑨.
  ¬¬𝑨 ⊢ 𝑨.

rule DNI. formula 𝑨.
  𝑨 ⊢ ¬¬𝑨.

rule NC. formula 𝑨, 𝑩.
  ¬𝑨, 𝑨 ⊢ 𝑩.

rule Gen. formula 𝑨 object °𝒙.
  𝑨 ⊢⁽°𝒙⁾ ∀¹°𝒙 𝑨.

rule Spec. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨, ∀¹°𝒙 𝑨 ⊢ 𝑨[°𝒙 ⤇ 𝒕].

rule UV. formula 𝑨 object °𝒙, °𝒚.
  °𝒚 free for °𝒙 in 𝑨, °𝒚 not free in 𝑨, ∀²°𝒙 𝑨 ⊢ ∀¹°𝒚: 𝑨[°𝒙 ⤇ °𝒚].

rule Sub. formula 𝑨 object 𝒕, °𝒙.
  𝒕 free for °𝒙 in 𝑨 ⊩ 𝑨 ⊢⁽°𝒙⁾ 𝑨[°𝒙 ⤇ 𝒕].

rule OVS. formula 𝑪 object 𝒖, °𝒛.
  𝑪 ⊢ 𝑪[°𝒛 ⤇ 𝒖].

rule ExI. formula 𝑨 object 𝒕, °𝒙.
  𝑨[°𝒙 ⤇ 𝒕] ⊢ ∃¹°𝒙 𝑨.

postulate ExE. formula sequence 𝜞 formula 𝑨, 𝑩 object °𝒙.
  °𝒙 not free in 𝑩; 𝜞, 𝑨 ⊢ 𝑩 ⊩ 𝜞, ∃¹°𝒙 𝑨 ⊢⁽°𝒙⁾ 𝑩.

rule ExV. formula 𝑨 object °𝒙, °𝒚.
  °𝒚 not free in 𝑨, ∃²°𝒙 𝑨 ⊢ ∃¹°𝒚: 𝑨[°𝒙 ⤇ °𝒚].

axiom EqR. formula 𝑨.
  𝑨 ⇔ 𝑨.

rule EqS. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑩 ⇔ 𝑨.

rule EqT. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇔ 𝑩, 𝑩 ⇔ 𝑪 ⊢ 𝑨 ⇔ 𝑪.

rule EqI. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩, 𝑩 ⇒ 𝑨 ⊢ 𝑨 ⇔ 𝑩.

rule EqE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑨 ⇒ 𝑩.

rule EqE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩 ⊢ 𝑩 ⇒ 𝑨.

rule EqE3. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑨 ⊢ 𝑩.

rule EqE4. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑩 ⊢ 𝑨.

rule EqNE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑨 ⊢ ¬𝑩.

rule EqNE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑩 ⊢ ¬𝑨.

rule EqDE1. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, 𝑨 ∨ 𝑩 ⊢ 𝑨 ∧ 𝑩.

rule EqDE2. formula 𝑨, 𝑩.
  𝑨 ⇔ 𝑩, ¬𝑨 ∨ ¬𝑩 ⊢ ¬𝑨 ∧ ¬𝑩.

axiom Id. formula 𝑨.
  𝑨 ⇒ 𝑨.

axiom ID. formula 𝑨.
  𝑨 ⇒ 𝑨.

rule ICh. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩, 𝑩 ⇒ 𝑪 ⊢ 𝑨 ⇒ 𝑪.

rule PI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪) ⊢ 𝑩 ⇒ (𝑨 ⇒ 𝑪).

rule Imp. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪) ⊢ 𝑨 ∧ 𝑩 ⇒ 𝑪.

rule Exp. formula 𝑨, 𝑩, 𝑪.
  𝑨 ∧ 𝑩 ⇒ 𝑪 ⊢ 𝑨 ⇒ (𝑩 ⇒ 𝑪).

rule ICI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ (𝑩 ⇒ 𝑪) ⇒ (𝑨 ⇒ 𝑪).

rule IPI. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ (𝑪 ⇒ 𝑨) ⇒ (𝑪 ⇒ 𝑩).

rule CMI1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑨 ∧ 𝑪 ⇒ 𝑩 ∧ 𝑪.

rule CMI2. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑪 ∧ 𝑨 ⇒ 𝑪 ∧ 𝑩.

rule DMI1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑨 ∨ 𝑪 ⇒ 𝑩 ∨ 𝑪.

rule DMI2. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ 𝑩 ⊢ 𝑪 ∨ 𝑨 ⇒ 𝑪 ∨ 𝑩.

rule IRP1. formula 𝑨, 𝑩.
  ¬𝑨 ⊢ 𝑨 ⇒ 𝑩.

rule IRP2. formula 𝑨, 𝑩.
  𝑨 ⊢ ¬𝑨 ⇒ 𝑩.

rule IPC. formula 𝑨, 𝑩.
  𝑩 ⊢ 𝑨 ⇒ 𝑩.

rule IC. formula 𝑨, 𝑩.
  𝑨 ⇒ 𝑩 ⊢ ¬𝑩 ⇒ ¬𝑨.

rule ICN. formula 𝑨, 𝑩.
  𝑨 ⇒ ¬𝑩 ⊢ 𝑩 ⇒ ¬𝑨.

rule ICDN1. formula 𝑨, 𝑩.
  ¬𝑨 ⇒ 𝑩 ⊢ ¬𝑩 ⇒ 𝑨.

rule ICDN2. formula 𝑨, 𝑩.
  ¬𝑨 ⇒ ¬𝑩 ⊢ 𝑩 ⇒ 𝑨.

rule IL1. formula 𝑨, 𝑩, 𝑪.
  𝑨 ⇒ (𝑩 ⇒ 𝑪), ¬¬𝑨, ¬¬𝑩 ⊢ ¬¬𝑪.

rule IL2. formula 𝑨, 𝑩.
  ¬¬(𝑨 ⇒ 𝑩) ⊢ ¬¬𝑨 ⇒ ¬¬𝑩.

rule IL3. formula 𝑨, 𝑩, 𝑪.
  ¬¬(𝑨 ⇒ 𝑩), ¬¬(𝑩 ⇒ 𝑪) ⊢ ¬¬(𝑨 ⇒ 𝑪).

axiom IL4. formula 𝑨, 𝑩.
  ¬¬(𝑨 ∧ 𝑩) ⇔ ¬¬𝑨 ∧ ¬¬𝑩.

axiom IL5. formula 𝑨, 𝑩.
  ¬¬(𝑨 ⇔ 𝑩) ⇔ ¬¬(𝑨 ⇒ 𝑩) ∧ ¬¬(𝑩 ⇒ 𝑨).

end theory IR.


theory TS1.
  include theory SM Eq IR.

lemma T1a. object 𝒙.
  𝒙 = 𝒙
proof
  1. 𝒙 + 0 = 𝒙 by S5. — S5.
  2. 𝒙 + 0 = 𝒙 ⇒ (𝒙 + 0 = 𝒙 ⇒ 𝒙 = 𝒙) by S1. — S1.
  3. 𝒙 + 0 = 𝒙 ⇒ 𝒙 = 𝒙 by MP: 1; 2. — MP: 1; 2.
  result by MP: 1; 3. — MP: 1; 3.
∎

lemma T1b. object 𝒙, 𝒚.
  𝒙 = 𝒚 ⇒ 𝒚 = 𝒙
result by MP: T1a; PI: S1. — MP: T1a; PI: S1.

lemma T1B. object 𝒙, 𝒚.
  𝒙 = 𝒚 ⊢ 𝒚 = 𝒙
result by MP: premise T1B; T1b. — MP: premise T1B; T1b.

lemma T1c. object 𝒙, 𝒚, 𝒛.
  𝒙 = 𝒚 ⇒ (𝒚 = 𝒛 ⇒ 𝒙 = 𝒛)
result by ICh: T1b; S1. — ICh: T1b; S1.

lemma T1C. object 𝒙, 𝒚, 𝒛.
  𝒙 = 𝒚, 𝒚 = 𝒛 ⊢ 𝒙 = 𝒛
result by MP: premise T1C; MP: premise T1C; T1c. — MP: premise T1C₁; MP: premise T1C₀; T1c.

lemma T1d. object 𝒙, 𝒚, 𝒛.
  𝒙 = 𝒛 ⇒ (𝒚 = 𝒛 ⇒ 𝒙 = 𝒚)
result by PI: ICh: T1b; PI: T1c. — PI: ICh: T1b; PI: T1c.

lemma T1D. object 𝒙, 𝒚, 𝒛.
  𝒙 = 𝒛, 𝒚 = 𝒛 ⊢ 𝒙 = 𝒚
result by MP: premise T1D; MP: premise T1D; T1d. — MP: premise T1D₁; MP: premise T1D₀; T1d.

lemma IR1. predicate variable 𝑷 object °𝑥.
  𝑷(0), ∀²°𝑥: 𝑷(°𝑥) ⇒ 𝑷(s(°𝑥)) ⊢ ∀¹°𝑥 𝑷(°𝑥)
result by MP: CI; S9a. — MP: CI; S9a.

lemma IR2. predicate variable 𝑷 object °𝒙.
  𝑷(0), 𝑷(°𝒙) ⇒ 𝑷(s(°𝒙)) ⊢⁽¹ °𝒙⁾ 𝑷(°𝒙)
result by K1: IR1: Gen. — K1: IR1: Gen.

lemma IR. predicate variable 𝑷 object °𝒙.
  𝑷(0); 𝑷(°𝒙) ⊢ 𝑷(s(°𝒙)) ⊩ 𝑷(°𝒙)
result by IR2: premise ⊢₀; DT: premise ⊢₁. — IR2: premise ⊢₀; DT.

lemma T1e. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⇒ 𝒕 + 𝒔 = 𝒓 + 𝒔
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ = 𝒚¹ ⇒ 𝒙¹ + 𝒛¹ = 𝒚¹ + 𝒛¹.
  i. 𝐴(0)
  proof
    1. object 𝒙².
      𝒙² + 0 = 𝒙² by S5. — S5.
    2. object 𝒚².
      𝒚² + 0 = 𝒚² by S5. — S5.
    a. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⊢ 𝒙² + 0 = 𝒚² + 0
    proof
      a3. 𝒙² = 𝒚² by premise a. — premise a.
      a4. 𝒙² + 0 = 𝒚² by T1C: 1; a3. — T1C: 1; a3.
      result by T1D: a4; 2. — T1D: a4; 2.
    ∎
    result by DT, D: a. — DT₍D₎: a.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⇒ 𝒙² + 𝒛¹ = 𝒚² + 𝒛¹ by premise ii, D. — premise ii₍D₎.
    2. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⊢ 𝒙² + 𝒛¹ = 𝒚² + 𝒛¹ by MP: premise ⊢; 1. — MP: premise ⊢; 1.
    3. object 𝒙².
      𝒙² + s(𝒛¹) = s(𝒙² + 𝒛¹) by S6. — S6.
    4. object 𝒚².
      𝒚² + s(𝒛¹) = s(𝒚² + 𝒛¹) by S6. — S6.
    a. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⊢ 𝒙² + s(𝒛¹) = 𝒚² + s(𝒛¹)
    result by T1D: T1C; S6: S6; S2a: 2. — T1D: T1C; S6: S6; S2a: 2.
    8. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⇒ 𝒙² + s(𝒛¹) = 𝒚² + s(𝒛¹) by DT: a. — DT: a.
    9. [*concluding*] 𝐴(s(𝒛¹)) by 8, D. — 8₍D₎.
    result by DT, D: a: premise ⊢₁. — DT₍D₎: a.
  [* Number of concluding proof lines: 2, all proved. *]
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1E. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⊢ 𝒕 + 𝒔 = 𝒓 + 𝒔
result by MP: premise T1E; T1e. — MP: premise T1E; T1e.

lemma T1f. object 𝒕.
  𝒕 = 0 + 𝒕
proof
  definition D. object 𝒙¹.
    𝐴(𝒙¹) ≔ 𝒙¹ = 0 + 𝒙¹.
  i. 𝐴(0) by MP: S5; T1b, D. — MP: S5; T1b₍D₎.
  ii. object 𝒙¹.
    𝐴(𝒙¹) ⊢ 𝐴(s(𝒙¹))
  proof
    1. 𝒙¹ = 0 + 𝒙¹ by premise ii, D. — premise ii₍D₎.
    2. 0 + s(𝒙¹) = s(0 + 𝒙¹) by S6. — S6.
    3. s(𝒙¹) = s(0 + 𝒙¹) by S2a: 1. — S2a: 1.
    4. s(𝒙¹) = 0 + s(𝒙¹) by T1D: 3; 2. — T1D: 3; 2.
    result by 4, D. — 4₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1g. object 𝒓, 𝒕.
  s(𝒕) + 𝒓 = s(𝒕 + 𝒓)
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ s(𝒙¹) + 𝒚¹ = s(𝒙¹ + 𝒚¹).
  i. 𝐴(0)
  proof
    1. object 𝒙².
      s(𝒙²) + 0 = s(𝒙²) by S5. — S5.
    2. object 𝒙².
      𝒙² + 0 = 𝒙² by S5. — S5.
    3. object 𝒙².
      s(𝒙² + 0) = s(𝒙²) by S2a, 2. — S2a: 2.
    result by T1D, D: 1; 3. — T1D₍D₎: 1; 3.
  ∎
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      s(𝒙²) + 𝒚¹ = s(𝒙² + 𝒚¹) by premise ii, D. — premise ii₍D₎.
    2. object 𝒙².
      s(𝒙²) + s(𝒚¹) = s(s(𝒙²) + 𝒚¹) by S6. — S6.
    3. object 𝒙².
      s(s(𝒙²) + 𝒚¹) = s(s(𝒙² + 𝒚¹)) by S2a: 1. — S2a: 1.
    4. object 𝒙².
      s(𝒙²) + s(𝒚¹) = s(s(𝒙² + 𝒚¹)) by T1C: 2; 3. — T1C: 2; 3.
    5. object 𝒙².
      𝒙² + s(𝒚¹) = s(𝒙² + 𝒚¹) by S6. — S6.
    6. object 𝒙².
      s(𝒙² + s(𝒚¹)) = s(s(𝒙² + 𝒚¹)) by S2a: 5. — S2a: 5.
    7. object 𝒙².
      s(𝒙²) + s(𝒚¹) = s(𝒙² + s(𝒚¹)) by T1D: 4; 6. — T1D: 4; 6.
    result by 7, D. — 7₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1h. object 𝒓, 𝒕.
  𝒕 + 𝒓 = 𝒓 + 𝒕
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ + 𝒚¹ = 𝒚¹ + 𝒙¹.
  i. 𝐴(0)
  proof
    1. object 𝒙².
      𝒙² + 0 = 𝒙² by S5. — S5.
    2. object 𝒙².
      𝒙² = 0 + 𝒙² by T1f. — T1f.
    result by T1C, D: 1; 2. — T1C₍D₎: 1; 2.
  ∎
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      𝒙² + 𝒚¹ = 𝒚¹ + 𝒙² by premise ii, D. — premise ii₍D₎.
    2. object 𝒙².
      𝒙² + s(𝒚¹) = s(𝒙² + 𝒚¹) by S6. — S6.
    3. object 𝒙².
      s(𝒚¹) + 𝒙² = s(𝒚¹ + 𝒙²) by T1g. — T1g.
    4. object 𝒙².
      s(𝒙² + 𝒚¹) = s(𝒚¹ + 𝒙²) by S2a: 1. — S2a: 1.
    5. object 𝒙².
      𝒙² + s(𝒚¹) = s(𝒚¹ + 𝒙²) by T1C: 2; 4. — T1C: 2; 4.
    6. object 𝒙².
      𝒙² + s(𝒚¹) = s(𝒚¹) + 𝒙² by T1D: 5; 3. — T1D: 5; 3.
    result by 6, D. — 6₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1i. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⇒ 𝒔 + 𝒕 = 𝒔 + 𝒓
proof
  1. 𝒕 = 𝒓 ⇒ 𝒕 + 𝒔 = 𝒓 + 𝒔 by T1e. — T1e.
  2. 𝒕 + 𝒔 = 𝒔 + 𝒕 by T1h. — T1h.
  3. 𝒓 + 𝒔 = 𝒔 + 𝒓 by T1h. — T1h.
  a. 𝒕 = 𝒓 ⊢ 𝒔 + 𝒕 = 𝒔 + 𝒓
  proof
    4. 𝒕 = 𝒓 by premise a. — premise a.
    5. 𝒕 + 𝒔 = 𝒓 + 𝒔 by MP: 4; 1. — MP: 4; 1.
    6. 𝒔 + 𝒕 = 𝒓 + 𝒔 by S1a: 2; 5. — S1a: 2; 5.
    result by T1C: 6; 3. — T1C: 6; 3.
  ∎
  result by DT: a. — DT: a.
∎

lemma T1I. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⊢ 𝒔 + 𝒕 = 𝒔 + 𝒓
result by MP: premise ⊢; T1i. — MP: premise ⊢; T1i.

lemma T1j. object 𝒓, 𝒔, 𝒕.
  𝒕 + 𝒓 + 𝒔 = 𝒕 + (𝒓 + 𝒔)
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ + 𝒚¹ + 𝒛¹ = 𝒙¹ + (𝒚¹ + 𝒛¹).
  i. 𝐴(0)
  proof
    1. object 𝒙², 𝒚².
      𝒙² + 𝒚² + 0 = 𝒙² + 𝒚² by S5. — S5.
    2. object 𝒚².
      𝒚² + 0 = 𝒚² by S5. — S5.
    3. object 𝒙², 𝒚².
      𝒙² + (𝒚² + 0) = 𝒙² + 𝒚² by T1I: 2. — T1I: 2.
    result by T1D, D: 1; 3. — T1D₍D₎: 1; 3.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² + 𝒚² + 𝒛¹ = 𝒙² + (𝒚² + 𝒛¹) by premise ii, D. — premise ii₍D₎.
    2. object 𝒙², 𝒚².
      𝒙² + 𝒚² + s(𝒛¹) = s(𝒙² + 𝒚² + 𝒛¹) by S6. — S6.
    3. object 𝒙², 𝒚².
      s(𝒙² + 𝒚² + 𝒛¹) = s(𝒙² + (𝒚² + 𝒛¹)) by S2a: 1. — S2a: 1.
    4. object 𝒙², 𝒚².
      𝒙² + 𝒚² + s(𝒛¹) = s(𝒙² + (𝒚² + 𝒛¹)) by T1C: 2; 3. — T1C: 2; 3.
    5. object 𝒚².
      𝒚² + s(𝒛¹) = s(𝒚² + 𝒛¹) by S6. — S6.
    6. object 𝒙², 𝒚².
      𝒙² + (𝒚² + s(𝒛¹)) = 𝒙² + s(𝒚² + 𝒛¹) by T1I: 5. — T1I: 5.
    7. object 𝒙², 𝒚².
      𝒙² + s(𝒚² + 𝒛¹) = s(𝒙² + (𝒚² + 𝒛¹)) by S6. — S6.
    8. object 𝒙², 𝒚².
      𝒙² + (𝒚² + s(𝒛¹)) = s(𝒙² + (𝒚² + 𝒛¹)) by T1C: 6; 7. — T1C: 6; 7.
    result by T1D, D: 4; 8. — T1D₍D₎: 4; 8.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1k. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⇒ 𝒕 ⋅ 𝒔 = 𝒓 ⋅ 𝒔
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ = 𝒚¹ ⇒ 𝒙¹ ⋅ 𝒛¹ = 𝒚¹ ⋅ 𝒛¹.
  i. 𝐴(0)
  result by DT, D: T1D: S7; S7. — DT₍D₎: T1D: S7; S7.
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⇒ 𝒙² ⋅ 𝒛¹ = 𝒚² ⋅ 𝒛¹ by premise ii, D. — premise ii₍D₎.
    a. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⊢ 𝒙² ⋅ s(𝒛¹) = 𝒚² ⋅ s(𝒛¹)
    proof
      1a. 𝒙² = 𝒚² by premise a. — premise a.
      1b. 𝒚² = 𝒙² by MP: 1a; T1b. — MP: 1a; T1b.
      2. 𝒙² ⋅ 𝒛¹ = 𝒚² ⋅ 𝒛¹ by MP: premise a; 1. — MP: premise a; 1.
      3. 𝒙² ⋅ s(𝒛¹) = 𝒙² ⋅ 𝒛¹ + 𝒙² by S8. — S8.
      4. 𝒚² ⋅ s(𝒛¹) = 𝒚² ⋅ 𝒛¹ + 𝒚² by S8. — S8.
      5. 𝒙² ⋅ 𝒛¹ + 𝒙² = 𝒙² ⋅ 𝒛¹ + 𝒚² by T1I: 1a. — T1I: 1a.
      6. 𝒙² ⋅ 𝒛¹ + 𝒚² = 𝒚² ⋅ 𝒛¹ + 𝒚² by T1E: 2. — T1E: 2.
      7. 𝒙² ⋅ 𝒛¹ + 𝒙² = 𝒚² ⋅ 𝒛¹ + 𝒚² by T1C: 5; 6. — T1C: 5; 6.
      result by T1D: 3; T1D: 4; 7. — T1D: 3; T1D: 4; 7.
    ∎
    result by DT, D: a: premise ⊢₁. — DT₍D₎: a.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1K. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⊢ 𝒕 ⋅ 𝒔 = 𝒓 ⋅ 𝒔
result by MP: premise ⊢; T1k. — MP: premise ⊢; T1k.

lemma T1l. object 𝒕.
  0 ⋅ 𝒕 = 0
proof
  definition D. object 𝒛¹.
    𝐴(𝒛¹) ≔ 0 ⋅ 𝒛¹ = 0.
  i. 𝐴(0) by D, S7. — S7₍D₎.
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. 0 ⋅ 𝒛¹ = 0 by premise ii, D. — premise ii₍D₎.
    2. 0 ⋅ s(𝒛¹) = 0 ⋅ 𝒛¹ + 0 by S8. — S8.
    3. 0 ⋅ 𝒛¹ + 0 = 0 ⋅ 𝒛¹ by S5. — S5.
    result by T1C, D: 2; T1C: 3; premise ⊢, D. — T1C₍D₎: 2; T1C: 3; premise ⊢₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1m. object 𝒓, 𝒕.
  s(𝒕) ⋅ 𝒓 = 𝒕 ⋅ 𝒓 + 𝒓
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ s(𝒙¹) ⋅ 𝒚¹ = 𝒙¹ ⋅ 𝒚¹ + 𝒚¹.
  i. 𝐴(0)
  proof
    1. object 𝒙².
      s(𝒙²) ⋅ 0 = 0 by S7. — S7.
    2. object 𝒙².
      𝒙² ⋅ 0 = 0 by S7. — S7.
    3. object 𝒙².
      𝒙² ⋅ 0 + 0 = 𝒙² ⋅ 0 by S5. — S5.
    4. object 𝒙².
      s(𝒙²) ⋅ 0 = 𝒙² ⋅ 0 + 0 by T1D: T1D; 3: 1; 2. — T1D: T1D; 3: 1; 2.
    result by 4, D. — 4₍D₎.
  ∎
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      s(𝒙²) ⋅ 𝒚¹ = 𝒙² ⋅ 𝒚¹ + 𝒚¹ by premise ii, D. — premise ii₍D₎.
    2. object 𝒙².
      s(𝒙²) ⋅ s(𝒚¹) = s(𝒙²) ⋅ 𝒚¹ + s(𝒙²) by S8. — S8.
    3. object 𝒙².
      s(𝒙²) ⋅ 𝒚¹ + s(𝒙²) = 𝒙² ⋅ 𝒚¹ + 𝒚¹ + s(𝒙²) by T1E: 1. — T1E: 1.
    4. object 𝒙².
      𝒙² ⋅ 𝒚¹ + 𝒚¹ + s(𝒙²) = 𝒙² ⋅ 𝒚¹ + (𝒚¹ + s(𝒙²)) by T1j. — T1j.
    5. object 𝒙².
      𝒚¹ + s(𝒙²) = s(𝒚¹ + 𝒙²) by S6. — S6.
    6. object 𝒙².
      𝒙² ⋅ 𝒚¹ + (𝒚¹ + s(𝒙²)) = 𝒙² ⋅ 𝒚¹ + s(𝒚¹ + 𝒙²) by T1I: 5. — T1I: 5.
    7. object 𝒙².
      s(𝒙²) ⋅ s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + 𝒚¹ + s(𝒙²) by T1C: 2; 3. — T1C: 2; 3.
    8. object 𝒙².
      s(𝒙²) ⋅ s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + (𝒚¹ + s(𝒙²)) by T1C: 7; 4. — T1C: 7; 4.
    9. object 𝒙².
      s(𝒙²) ⋅ s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + s(𝒚¹ + 𝒙²) by T1C: 8; 6. — T1C: 8; 6.
    10. object 𝒙².
      s(𝒙² + 𝒚¹) = s(𝒚¹ + 𝒙²) by S2a: T1h. — S2a: T1h.
    11. object 𝒙².
      𝒙² ⋅ s(𝒚¹) + s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + 𝒙² + s(𝒚¹) by T1E: S8. — T1E: S8.
    12. object 𝒙².
      𝒙² ⋅ 𝒚¹ + 𝒙² + s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + (𝒙² + s(𝒚¹)) by T1j. — T1j.
    13. object 𝒙².
      𝒙² ⋅ 𝒚¹ + (𝒙² + s(𝒚¹)) = 𝒙² ⋅ 𝒚¹ + s(𝒙² + 𝒚¹) by T1I: S6. — T1I: S6.
    14. object 𝒙².
      𝒙² ⋅ 𝒚¹ + s(𝒙² + 𝒚¹) = 𝒙² ⋅ 𝒚¹ + s(𝒚¹ + 𝒙²) by T1I: 10. — T1I: 10.
    15. object 𝒙².
      𝒙² ⋅ s(𝒚¹) + s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + s(𝒙² + 𝒚¹) by T1C: 11; T1C: 12; 13. — T1C: 11; T1C: 12; 13.
    16. object 𝒙².
      𝒙² ⋅ s(𝒚¹) + s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + s(𝒚¹ + 𝒙²) by T1C: 15; 14. — T1C: 15; 14.
    17. object 𝒙².
      s(𝒙²) ⋅ s(𝒚¹) = 𝒙² ⋅ s(𝒚¹) + s(𝒚¹) by T1D: 9; 16. — T1D: 9; 16.
    result by 17, D. — 17₍D₎.
    result by 17, D. — 17₍D₎.
  [* Number of concluding proof lines: 2, all proved. *]
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1n. object 𝒓, 𝒕.
  𝒕 ⋅ 𝒓 = 𝒓 ⋅ 𝒕
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ ⋅ 𝒚¹ = 𝒚¹ ⋅ 𝒙¹.
  i. 𝐴(0) by T1D, D: S7; T1l. — T1D₍D₎: S7; T1l.
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      𝒙² ⋅ 𝒚¹ = 𝒚¹ ⋅ 𝒙² by premise ii, D. — premise ii₍D₎.
    2. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + 𝒙² by S8. — S8.
    3. object 𝒙².
      s(𝒚¹) ⋅ 𝒙² = 𝒚¹ ⋅ 𝒙² + 𝒙² by T1m. — T1m.
    4. object 𝒙².
      𝒙² ⋅ 𝒚¹ + 𝒙² = 𝒚¹ ⋅ 𝒙² + 𝒙² by T1E: 1. — T1E: 1.
    5. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = s(𝒚¹) ⋅ 𝒙² by T1C: 2; T1D: 4; 3. — T1C: 2; T1D: 4; 3.
    result by 5, D. — 5₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1o. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⇒ 𝒔 ⋅ 𝒕 = 𝒔 ⋅ 𝒓
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ = 𝒚¹ ⇒ 𝒛¹ ⋅ 𝒙¹ = 𝒛¹ ⋅ 𝒚¹.
  i. 𝐴(0)
  proof
    1. object 𝒙², 𝒚².
      0 ⋅ 𝒙² = 0 ⋅ 𝒚² by T1D, T1l. — T1D: T1l; T1l.
    2. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⇒ 0 ⋅ 𝒙² = 0 ⋅ 𝒚² by DT: 1. — DT: 1.
    result by D, 2. — 2₍D₎.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⇒ 𝒛¹ ⋅ 𝒙² = 𝒛¹ ⋅ 𝒚² by D, premise ii. — premise ii₍D₎.
    a. object 𝒙², 𝒚².
      𝒙² = 𝒚² ⊢ s(𝒛¹) ⋅ 𝒙² = s(𝒛¹) ⋅ 𝒚²
    proof
      a1. s(𝒛¹) ⋅ 𝒙² = 𝒛¹ ⋅ 𝒙² + 𝒙² by T1m. — T1m.
      a2. s(𝒛¹) ⋅ 𝒚² = 𝒛¹ ⋅ 𝒚² + 𝒚² by T1m. — T1m.
      a3. 𝒛¹ ⋅ 𝒙² = 𝒛¹ ⋅ 𝒚² by MP: premise a; 1. — MP: premise a; 1.
      a4. 𝒛¹ ⋅ 𝒙² + 𝒙² = 𝒛¹ ⋅ 𝒚² + 𝒚² by T1C: T1I; T1E: premise a; a3. — T1C: T1I; T1E: premise a; a3.
      result by T1C: a1; T1D: a4; a2. — T1C: a1; T1D: a4; a2.
    ∎
    result by DT, D: a: premise ⊢₁. — DT₍D₎: a.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T1O. object 𝒓, 𝒔, 𝒕.
  𝒕 = 𝒓 ⊢ 𝒔 ⋅ 𝒕 = 𝒔 ⋅ 𝒓
result by MP: premise ⊢; T1o. — MP: premise ⊢; T1o.

lemma T2a. object 𝒓, 𝒔, 𝒕.
  𝒕 ⋅ (𝒓 + 𝒔) = 𝒕 ⋅ 𝒓 + 𝒕 ⋅ 𝒔
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ ⋅ (𝒚¹ + 𝒛¹) = 𝒙¹ ⋅ 𝒚¹ + 𝒙¹ ⋅ 𝒛¹.
  i. 𝐴(0)
  proof
    1. object 𝒚².
      𝒚² + 0 = 𝒚² by S5. — S5.
    2. object 𝒙².
      𝒙² ⋅ 0 = 0 by S7. — S7.
    3. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + 0) = 𝒙² ⋅ 𝒚² by T1O: 1. — T1O: 1.
    4. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² + 𝒙² ⋅ 0 = 𝒙² ⋅ 𝒚² by T1C: T1I; S5: 2. — T1C: T1I; S5: 2.
    5. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + 0) = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ 0 by T1D: 3; 4. — T1D: 3; 4.
    result by 5, D. — 5₍D₎.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + 𝒛¹) = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ 𝒛¹ by D, premise ii. — premise ii₍D₎.
    2. object 𝒚².
      𝒚² + s(𝒛¹) = s(𝒚² + 𝒛¹) by S6. — S6.
    3. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + s(𝒛¹)) = 𝒙² ⋅ s(𝒚² + 𝒛¹) by T1O: 2. — T1O: 2.
    4. object 𝒙², 𝒚².
      𝒙² ⋅ s(𝒚² + 𝒛¹) = 𝒙² ⋅ (𝒚² + 𝒛¹) + 𝒙² by S8. — S8.
    5. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + 𝒛¹) + 𝒙² = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ 𝒛¹ + 𝒙² by T1E: 1. — T1E: 1.
    6. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² + 𝒙² ⋅ s(𝒛¹) = 𝒙² ⋅ 𝒚² + (𝒙² ⋅ 𝒛¹ + 𝒙²) by T1I: S8. — T1I: S8.
    7. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² + 𝒙² ⋅ 𝒛¹ + 𝒙² = 𝒙² ⋅ 𝒚² + (𝒙² ⋅ 𝒛¹ + 𝒙²) by T1j. — T1j.
    8. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + s(𝒛¹)) = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ 𝒛¹ + 𝒙² by T1C: T1C; 5: 3; 4. — T1C: T1C; 5: 3; 4.
    9. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² + 𝒙² ⋅ s(𝒛¹) = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ 𝒛¹ + 𝒙² by T1D: 6; 7. — T1D: 6; 7.
    10. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² + s(𝒛¹)) = 𝒙² ⋅ 𝒚² + 𝒙² ⋅ s(𝒛¹) by T1D: 8; 9. — T1D: 8; 9.
    result by 10, D. — 10₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T2b. object 𝒓, 𝒔, 𝒕.
  (𝒓 + 𝒔) ⋅ 𝒕 = 𝒓 ⋅ 𝒕 + 𝒔 ⋅ 𝒕
proof
  1. (𝒓 + 𝒔) ⋅ 𝒕 = 𝒕 ⋅ 𝒓 + 𝒕 ⋅ 𝒔 by T1C: T1n; T2a. — T1C: T1n; T2a.
  2. 𝒓 ⋅ 𝒕 + 𝒔 ⋅ 𝒕 = 𝒕 ⋅ 𝒓 + 𝒔 ⋅ 𝒕 by T1E: T1n. — T1E: T1n.
  3. 𝒕 ⋅ 𝒓 + 𝒔 ⋅ 𝒕 = 𝒕 ⋅ 𝒓 + 𝒕 ⋅ 𝒔 by T1I: T1n. — T1I: T1n.
  result by T1D: T1D; 2: 1; 3. — T1D: T1D; 2: 1; 3.
∎

lemma T2c. object 𝒓, 𝒔, 𝒕.
  𝒕 ⋅ 𝒓 ⋅ 𝒔 = 𝒕 ⋅ (𝒓 ⋅ 𝒔)
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ ⋅ 𝒚¹ ⋅ 𝒛¹ = 𝒙¹ ⋅ (𝒚¹ ⋅ 𝒛¹).
  i. 𝐴(0)
  proof
    1. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ 0 = 0 by S7. — S7.
    2. object 𝒚².
      𝒚² ⋅ 0 = 0 by S7. — S7.
    3. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² ⋅ 0) = 𝒚² ⋅ 0 ⋅ 𝒙² by T1n. — T1n.
    4. object 𝒙², 𝒚².
      𝒚² ⋅ 0 ⋅ 𝒙² = 0 ⋅ 𝒙² by T1K: 2. — T1K: 2.
    5. object 𝒙².
      0 ⋅ 𝒙² = 0 by T1C: T1n; S7. — T1C: T1n; S7.
    6. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² ⋅ 0) = 0 by T1C: T1C; 5: 3; 4. — T1C: T1C; 5: 3; 4.
    7. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ 0 = 𝒙² ⋅ (𝒚² ⋅ 0) by T1D: 1; 6. — T1D: 1; 6.
    result by 7, D. — 7₍D₎.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ 𝒛¹ = 𝒙² ⋅ (𝒚² ⋅ 𝒛¹) by D, premise ii. — premise ii₍D₎.
    2. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ s(𝒛¹) = 𝒙² ⋅ 𝒚² ⋅ 𝒛¹ + 𝒙² ⋅ 𝒚² by S8. — S8.
    3. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ 𝒛¹ + 𝒙² ⋅ 𝒚² = 𝒙² ⋅ (𝒚² ⋅ 𝒛¹) + 𝒙² ⋅ 𝒚² by T1E: 1. — T1E: 1.
    4. object 𝒚².
      𝒚² ⋅ s(𝒛¹) = 𝒚² ⋅ 𝒛¹ + 𝒚² by S8. — S8.
    5. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² ⋅ 𝒛¹ + 𝒚²) = 𝒙² ⋅ (𝒚² ⋅ 𝒛¹) + 𝒙² ⋅ 𝒚² by T2a. — T2a.
    6. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² ⋅ s(𝒛¹)) = 𝒙² ⋅ (𝒚² ⋅ 𝒛¹ + 𝒚²) by T1O: 4. — T1O: 4.
    7. object 𝒙², 𝒚².
      𝒙² ⋅ (𝒚² ⋅ s(𝒛¹)) = 𝒙² ⋅ (𝒚² ⋅ 𝒛¹) + 𝒙² ⋅ 𝒚² by T1C: 6; 5. — T1C: 6; 5.
    8. object 𝒙², 𝒚².
      𝒙² ⋅ 𝒚² ⋅ s(𝒛¹) = 𝒙² ⋅ (𝒚² ⋅ s(𝒛¹)) by T1C: 2; T1D: 3; 7. — T1C: 2; T1D: 3; 7.
    result by 8, D. — 8₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T2d. object 𝒓, 𝒔, 𝒕.
  𝒕 + 𝒔 = 𝒓 + 𝒔 ⇒ 𝒕 = 𝒓
proof
  definition D. object 𝒙¹, 𝒚¹, 𝒛¹.
    𝐴(𝒛¹) ≔₍𝒙¹,𝒚¹₎ 𝒙¹ + 𝒛¹ = 𝒚¹ + 𝒛¹ ⇒ 𝒙¹ = 𝒚¹.
  i. 𝐴(0)
  proof
    a. object 𝒙², 𝒚².
      𝒙² + 0 = 𝒚² + 0 ⊢ 𝒙² = 𝒚²
    result by T1C: T1C; S5: T1B: S5. — T1C: T1C; S5: T1B: S5.
    1. object 𝒙², 𝒚².
      𝒙² + 0 = 𝒚² + 0 ⇒ 𝒙² = 𝒚² by DT: a. — DT: a.
    result by 1, D. — 1₍D₎.
  ∎
  ii. object 𝒛¹.
    𝐴(𝒛¹) ⊢ 𝐴(s(𝒛¹))
  proof
    1. object 𝒙², 𝒚².
      𝒙² + 𝒛¹ = 𝒚² + 𝒛¹ ⇒ 𝒙² = 𝒚² by D, premise ii. — premise ii₍D₎.
    a. object 𝒙², 𝒚².
      𝒙² + s(𝒛¹) = 𝒚² + s(𝒛¹) ⊢ 𝒙² = 𝒚²
    proof
      a0. 𝒙² + s(𝒛¹) = 𝒚² + s(𝒛¹) by premise a. — premise a.
      a1. s(𝒙² + 𝒛¹) = 𝒙² + s(𝒛¹) by T1B: S6. — T1B: S6.
      a2. 𝒚² + s(𝒛¹) = s(𝒚² + 𝒛¹) by S6. — S6.
      a3. s(𝒙² + 𝒛¹) = s(𝒚² + 𝒛¹) by T1C: T1C; a2: a1; a0. — T1C: T1C; a2: a1; a0.
      result by MP: S4a; 1: a3. — MP: S4a; 1: a3.
    ∎
    2. object 𝒙², 𝒚².
      𝒙² + s(𝒛¹) = 𝒚² + s(𝒛¹) ⇒ 𝒙² = 𝒚² by DT: a. — DT: a.
    result by D, 2. — 2₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T2D. object 𝒓, 𝒔, 𝒕.
  𝒕 + 𝒔 = 𝒓 + 𝒔 ⊢ 𝒕 = 𝒓
result by MP: premise ⊢; T2d. — MP: premise ⊢; T2d.

lemma T3a. object 𝒕.
  𝒕 + 1 = s(𝒕)
result by T1C: S6, n1; S2a: S5. — T1C: S6₍n1₎; S2a: S5.

lemma T3b. object 𝒕.
  𝒕 ⋅ 1 = 𝒕
result by T1C: T1C; T1B: S8, n1; T1E; T1f: S7. — T1C: T1C; T1B: S8₍n1₎; T1E; T1f: S7.

lemma T3c. object 𝒕.
  𝒕 ⋅ 2 = 𝒕 + 𝒕
result by T1C: S8, n2; T1E: T3b. — T1C: S8₍n2₎; T1E: T3b.

lemma T3d. object 𝒔, 𝒕.
  𝒕 + 𝒔 = 0 ⇒ 𝒕 = 0 ∧ 𝒔 = 0
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ + 𝒚¹ = 0 ⇒ 𝒙¹ = 0 ∧ 𝒚¹ = 0.
  i. 𝐴(0) by DT, D: CI: T1D; T1a: T1B; T1B: S5. — DT₍D₎: CI: T1D; T1a: T1B; T1B: S5.
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      s(𝒙² + 𝒚¹) ≠ 0 by MP, NE: S3, NE; IC: T1b. — MP₍NE₎: S3₍NE₎; IC: T1b.
    2. object 𝒙².
      s(𝒙² + 𝒚¹) ≠ 0 ⇒ 𝒙² + s(𝒚¹) ≠ 0 by IC, NE: DT: T1C: T1B: S6. — IC₍NE, NE₎: DT: T1C: T1B: S6.
    3. object 𝒙².
      𝒙² + s(𝒚¹) ≠ 0 by MP: 1; 2. — MP: 1; 2.
    result by DT, D: NC: 3, NE. — DT₍D₎: NC: 3₍NE₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T3D. object 𝒔, 𝒕.
  𝒕 + 𝒔 = 0 ⊢ 𝒕 = 0 ∧ 𝒔 = 0
result by MP: premise ⊢; T3d. — MP: premise ⊢; T3d.

lemma T3e. object 𝒔, 𝒕.
  𝒕 ⋅ 𝒔 = 0 ⇒ 𝒕 = 0 ∨ 𝒔 = 0
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ ⋅ 𝒚¹ = 0 ⇒ 𝒙¹ = 0 ∨ 𝒚¹ = 0.
  i. 𝐴(0) by DT, D: DI2: T1a. — DT₍D₎: DI2: T1a.
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = 0 ⇒ 𝒙² ⋅ 𝒚¹ + 𝒙² = 0 by DT: T1C: T1D: T1a; S8. — DT: T1C: T1D: T1a; S8.
    2. object 𝒙².
      𝒙² ⋅ 𝒚¹ + 𝒙² = 0 ⇒ 𝒙² = 0 by DT: CE2: T3D. — DT: CE2: T3D.
    3. object 𝒙².
      𝒙² = 0 ⇒ 𝒙² = 0 ∨ s(𝒚¹) = 0 by DT: DI1. — DT: DI1.
    4. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = 0 ⇒ 𝒙² = 0 ∨ s(𝒚¹) = 0 by ICh: ICh; 3: 1; 2. — ICh: ICh; 3: 1; 2.
    result by 4, D. — 4₍D₎.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T3E. object 𝒔, 𝒕.
  𝒕 ⋅ 𝒔 = 0 ⊢ 𝒕 = 0 ∨ 𝒔 = 0
result by MP: premise ⊢; T3e. — MP: premise ⊢; T3e.

lemma T3Ea. object 𝒔, 𝒕.
  𝒕 ≠ 0, 𝒕 ⋅ 𝒔 = 0 ⊢ 𝒔 = 0
result by DS1, NE: T3E. — DS1₍NE₎: T3E.

lemma T3Eb. object 𝒔, 𝒕.
  𝒔 ≠ 0, 𝒕 ⋅ 𝒔 = 0 ⊢ 𝒕 = 0
result by DS2: T3E; premise ⊢₀, NE: premise ⊢₁. — DS2: T3E; premise ⊢₀₍NE₎.

lemma T3f. object 𝒔, 𝒕.
  𝒕 + 𝒔 = 1 ⇒ 𝒕 = 0 ∧ 𝒔 = 1 ∨ 𝒕 = 1 ∧ 𝒔 = 0
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ + 𝒚¹ = 1 ⇒ 𝒙¹ = 0 ∧ 𝒚¹ = 1 ∨ 𝒙¹ = 1 ∧ 𝒚¹ = 0.
  i. 𝐴(0) by DT, D: DI2: CI: T1D; T1a: T1B; T1B: S5. — DT₍D₎: DI2: CI: T1D; T1a: T1B; T1B: S5.
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      𝒙² + s(𝒚¹) = 1 ⊢ s(𝒙² + 𝒚¹) = 1 by T1C: T1B: S6. — T1C: T1B: S6.
    2. object 𝒙².
      s(𝒙² + 𝒚¹) = 1 ⊢ 𝒙² + 𝒚¹ = 0 by MP: premise ⊢; S4, n1. — MP: premise ⊢; S4₍n1₎.
    3. object 𝒙².
      𝒙² + 𝒚¹ = 0 ⊢ 𝒙² = 0 ∧ 𝒚¹ = 0 by T3D. — T3D.
    4. 𝒚¹ = 0 ⊢ s(𝒚¹) = 1 by MP: premise ⊢; S2, n1. — MP: premise ⊢; S2₍n1₎.
    5. object 𝒙².
      𝒙² = 0, 𝒚¹ = 0 ⊢ 𝒙² = 0 ∧ s(𝒚¹) = 1 ∨ 𝒙² = 1 ∧ s(𝒚¹) = 0 by DI: CI: 4. — DI: CI: 4.
    6. object 𝒙².
      𝒙² + 𝒚¹ = 0 ⊢ 𝒙² = 0 ∧ s(𝒚¹) = 1 ∨ 𝒙² = 1 ∧ s(𝒚¹) = 0 by 5: CE; CE: 3; 3. — 5: CE; CE: 3; 3.
    7. object 𝒙².
      𝒙² + s(𝒚¹) = 1 ⊢ 𝒙² + 𝒚¹ = 0 by 2: 1. — 2: 1.
    result by DT, D: 6: 7. — DT₍D₎: 6: 7.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T3F. object 𝒔, 𝒕.
  𝒕 + 𝒔 = 1 ⊢ 𝒕 = 0 ∧ 𝒔 = 1 ∨ 𝒕 = 1 ∧ 𝒔 = 0
result by MP: premise ⊢; T3f. — MP: premise ⊢; T3f.

lemma EqRN. object 𝒙, 𝒚.
  𝒙 ≠ 𝒚 ⊢ 𝒚 ≠ 𝒙
proof
  1. 𝒚 = 𝒙 ⇒ 𝒙 = 𝒚 by T1b. — T1b.
  2. 𝒙 ≠ 𝒚 ⇒ 𝒚 ≠ 𝒙 by IC, NE: 1. — IC₍NE, NE₎: 1.
  result by MP: premise ⊢; 2. — MP: premise ⊢; 2.
∎

lemma EqTrN. object 𝒙, 𝒚, 𝒛.
  𝒙 = 𝒚, 𝒚 ≠ 𝒛 ⊢ 𝒙 ≠ 𝒛
proof
  0. 𝒙 = 𝒚 by premise EqTrN. — premise EqTrN₀.
  1. ¬𝒚 = 𝒛 by premise EqTrN, NE. — premise EqTrN₁₍NE₎.
  2. 𝒙 = 𝒛 ⊢ ¬𝒚 = 𝒛 by 1. — 1.
  3. 𝒙 = 𝒛 ⊢ 𝒚 = 𝒛 by T1D: T1D; T1D: T1a; 0; T1a. — T1D: T1D; T1D: T1a; 0; T1a.
  4. ¬𝒙 = 𝒛 by RA: 3; 2. — RA: 3; 2.
  result by 4, NE. — 4₍NE₎.
∎

lemma T3g. object 𝒔, 𝒕.
  𝒕 ⋅ 𝒔 = 1 ⇒ 𝒕 = 1 ∧ 𝒔 = 1
proof
  definition D. object 𝒙¹, 𝒚¹.
    𝐴(𝒚¹) ≔₍𝒙¹₎ 𝒙¹ ⋅ 𝒚¹ = 1 ⇒ 𝒙¹ = 1 ∧ 𝒚¹ = 1.
  i. 𝐴(0)
  proof
    result by IRP1, D: MT: DT; S3, NE: T1D, n1: T1B; T1B: S7. — IRP1₍D₎: MT: DT; S3₍NE₎: T1D₍n1₎: T1B; T1B: S7.
    1. object 𝒙².
      𝒙² ⋅ 0 = 0 by S7. — S7.
    2a. object 𝒙².
      𝒙² ⋅ 0 ≠ 1 by EqTrN: 1; S3, n1. — EqTrN: 1; S3₍n1₎.
    result by IRP1, D: 2a, NE. — IRP1₍D₎: 2a₍NE₎.
    2. ¬0 = 1 by S3, n1, NE. — S3₍n1, NE₎.
    3. object 𝒙².
      𝒙² ⋅ 0 = 1 ⊢ 0 = 1 by T1D: T1B; T1B: 1. — T1D: T1B; T1B: 1.
    4. object 𝒙².
      ¬𝒙² ⋅ 0 = 1 by MT: DT; 2: 3. — MT: DT; 2: 3.
    result by IRP1, D: 4. — IRP1₍D₎: 4.
  [* Number of concluding proof lines: 3, all proved. *]
  ∎
  ii. object 𝒚¹.
    𝐴(𝒚¹) ⊢ 𝐴(s(𝒚¹))
  proof
    1. object 𝒙².
      𝒙² ⋅ 𝒚¹ = 1 ⇒ 𝒙² = 1 ∧ 𝒚¹ = 1 by D, premise ii. — premise ii₍D₎.
    a. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = 1 ⊢ 𝒙² = 1
    proof
      a0. 𝒙² ⋅ s(𝒚¹) = 1 by premise a. — premise a.
      a1. 𝒙² ⋅ s(𝒚¹) = 𝒙² ⋅ 𝒚¹ + 𝒙² by S8. — S8.
      a2. 𝒙² ⋅ 𝒚¹ + 𝒙² = 1 by T1D: T1B; T1B: a1; a0. — T1D: T1B; T1B: a1; a0.
      a3. 𝒙² ⋅ 𝒚¹ = 0 ∧ 𝒙² = 1 ∨ 𝒙² ⋅ 𝒚¹ = 1 ∧ 𝒙² = 0 by MP: a2; T3f. — MP: a2; T3f.
      a4. 𝒙² ⋅ 𝒚¹ = 1 ⊢ 𝒙² = 1 by CE1: MP: premise ⊢; 1. — CE1: MP: premise ⊢; 1.
      a4a. 1 ≠ 0 by EqRN: S3, n1. — EqRN: S3₍n1₎.
      a5. 𝒙² = 1 ⊢ 𝒙² ≠ 0 by EqTrN: premise ⊢; a4a. — EqTrN: premise ⊢; a4a.
      a6. 𝒙² ⋅ 𝒚¹ = 1 ⊢ ¬𝒙² = 0 by a5, NE: a4. — a5₍NE₎: a4.
      a7. 𝒙² ⋅ 𝒚¹ = 1 ⇒ ¬𝒙² = 0 by DT: a6. — DT: a6.
      a8. formula 𝑨³, 𝑩³.
        (𝑨³ ⇒ ¬𝑩³) ⇒ ¬(𝑨³ ∧ 𝑩³) by CE: 58b, EQ. — CE: 58b₍EQ₎.
      a9. ¬(𝒙² ⋅ 𝒚¹ = 1 ∧ 𝒙² = 0) by MP: a7; a8. — MP: a7; a8.
      a10. 𝒙² ⋅ 𝒚¹ = 0 ∧ 𝒙² = 1 by DS2: a3; a9. — DS2: a3; a9.
      result by CE: a10. — CE: a10.
    ∎
    b. object 𝒙².
      𝒙² ⋅ s(𝒚¹) = 1 ⊢ s(𝒚¹) = 1
    proof
      b0. 𝒙² ⋅ s(𝒚¹) = 1 by premise b. — premise b.
      b1. 𝒙² = 1 by a: b0. — a: b0.
      b2. 𝒙² ⋅ s(𝒚¹) = 1 ⋅ s(𝒚¹) by MP: b1; T1k. — MP: b1; T1k.
      b3. 1 ⋅ s(𝒚¹) = s(𝒚¹) ⋅ 1 by T1n. — T1n.
      b4. s(𝒚¹) ⋅ 1 = s(𝒚¹) by T3b. — T3b.
      b5. 𝒙² ⋅ s(𝒚¹) = s(𝒚¹) by T1C: T1C; b4: b2; b3. — T1C: T1C; b4: b2; b3.
      result by T1C: T1B: b5. — T1C: T1B: b5.
    ∎
    result by DT, D: CI: a; b. — DT₍D₎: CI: a; b.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T3G. object 𝒔, 𝒕.
  𝒕 ⋅ 𝒔 = 1 ⊢ 𝒕 = 1 ∧ 𝒔 = 1
result by MP: premise ⊢; T3g. — MP: premise ⊢; T3g.

lemma T3h. object 𝒕ₓ₍°𝑦⁰⁺¹₎.
  𝒕ₓ₍°𝑦⁰⁺¹₎ ≠ 0 ⇒ ∃¹°𝑦⁰⁺¹ 𝒕ₓ₍°𝑦⁰⁺¹₎ = s(°𝑦⁰⁺¹)
proof
  definition D. object 𝒙¹.
    𝐴(𝒙¹) ≔ 𝒙¹ ≠ 0 ⇒ ∃¹°𝑤¹⁺¹ 𝒙¹ = s(°𝑤¹⁺¹).
  i. 𝐴(0) by IRP2, NE, D: T1a. — IRP2₍NE, D₎: T1a.
  ii. object 𝒙¹.
    𝐴(𝒙¹) ⊢ 𝐴(s(𝒙¹))
  proof
    1. 𝒙¹ = 0 ∨ 𝒙¹ ≠ 0 by EML, NE. — EML₍NE₎.
    2. 𝒙¹ = 0 ⊢ ∃¹°𝑤²⁺¹ s(𝒙¹) = s(°𝑤²⁺¹) by ExIa: S2a. — ExIa: S2a.
    a. 𝒙¹ ≠ 0 ⊢ ∃¹°𝑤²⁺¹ s(𝒙¹) = s(°𝑤²⁺¹)
    proof
      a1. ∃¹°𝑤³⁺¹ 𝒙¹ = s(°𝑤³⁺¹) by MP: premise a; premise ii, D. — MP: premise a; premise ii₍D₎.
      a2. object 𝒚³.
        𝒙¹ = s(𝒚³) ⊢ s(𝒙¹) = s(s(𝒚³)) by S2a. — S2a.
      a3. object 𝒚³.
        𝒙¹ = s(𝒚³) ⊢ ∃¹°𝑤³⁺¹ s(𝒙¹) = s(°𝑤³⁺¹) by ExIa: a2. — ExIa: a2.
      a4. ∃²°𝑤³⁺² 𝒙¹ = s(°𝑤³⁺²) ⊢ ∃¹°𝑤³⁺¹ s(𝒙¹) = s(°𝑤³⁺¹) by ExE: a3. — ExE: a3.
      result by a4: a1. — a4: a1.
    ∎
    b. 𝒙¹ = 0 ∨ 𝒙¹ ≠ 0 ⊢ ∃¹°𝑤²⁺¹ s(𝒙¹) = s(°𝑤²⁺¹) by PCa: 2; a. — PCa: 2; a.
    c. ∃¹°𝑤²⁺¹ s(𝒙¹) = s(°𝑤²⁺¹) by b: 1. — b: 1.
    result by IPC, D: c. — IPC₍D₎: c.
  ∎
  result by OVS: IR, D: i; ii. — OVS: IR₍D₎: i; ii.
∎

lemma T3H. object 𝒕ₓ₍°𝑦⁰⁺¹₎.
  𝒕ₓ₍°𝑦⁰⁺¹₎ ≠ 0 ⊢ ∃¹°𝑦⁰⁺¹ 𝒕ₓ₍°𝑦⁰⁺¹₎ = s(°𝑦⁰⁺¹)
result by MP: premise ⊢; T3h. — MP: premise ⊢; T3h.

end theory TS1.

— End: theory database test-SM.
